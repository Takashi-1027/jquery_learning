jQueryを学ぼう
  このレッスンではjQueryの基本を学びます。
  jQueryを使えば、アニメーションをつけることや、
  ユーザーの行動に応じたインタラクティブなデザインを実現することができます。

  参考画像：jquery01_image_1.jpg

～jQueryに触れてみよう～
jQueryとは
  jQueryはJavaScriptのライブラリの1つです。
  ユーザーのクリックに反応して表示されるフォームや、アニメーションなど、
  HTMLとCSSだけでは実現できなかった様々な動きを実現することができます。

  参考画像：jquery01_image_2.jpg
  参考画像：jquery01_image_3.jpg
  （アニメーションで動いている）

～メソッドを使ってみよう～
jQueryの書き方
  jQueryの操作は非常に直感的かつシンプルです。jQueryの使い方は、
  ➀jQueryオブジェクトを作成し、➁そのjQueryオブジェクトに対して
  メソッド（機能）を呼び出す、という2つが基本になります。
  jQueryはJavaScript(JS)なので、文末にセミコロンが必要です。
  またコメントもJS同様に//を用います。

  参考画像：jquery01_image_4.jpg


jQueryオブジェクト
  jQueryオブジェクトは、図のように$('セレクト')とするだけで作成できます。
  セレクタにはHTMLのタグ名やclass名などを指定し、それに合致したHTMLの要素が
  jQueryオブジェクトになります。セレクタはCSSセレクタ（CSSで使用するセレクタ）
  と同じなので、CSSの知識さえあれば直感的に操作できます。

  参考画像：jquery01_image_5.jpg


hideメソッドを使ってみよう
  メソッドとは、便利な機能のことです。jQueryのメソッドは前述のjQueryオブジェクトでしか利用できません。
  メソッドを使うと、jQueryオブジェクトの内容（HTMLの要素）を変更したり、アニメーションを付けたりすることができます。
  メソッドは$('セレクタ').メソッドというように、ドットに続けて呼び出します。
  要素を隠すhideというメソッドを使ってみましょう。

  参考画像：jquery01_image_6.jpg


～アニメーションを使おう～
アニメーション付きで要素を隠す（１）
  hideメソッドに似たものとしてfadeOutメソッドがあります。
  fadeOutメソッドを用いると、要素を隠す際にアニメーションを付けることができます。
  fadeOutメソッドは、後ろの()内に引数として、アニメーションの速度を指定できます。
  ミリ秒での指定や、文字列での指定が可能です。


  参考画像：jquery01_image_7.jpg
  参考画像：jquery01_image_8.jpg


アニメーション付きで要素を隠す（２）
  slideUpメソッドを用いても、アニメーション付きで要素を隠すことができます。
  fadeOutと異なるアニメーションを実現できます。
  また、slideUpメソッドも後ろの()内に引数として、アニメーションの速度を指定できます。

  参考画像：jquery01_image_9.jpg
  参考画像：jquery01_image_10.jpg
  参考画像：jquery01_image_11.jpg


～classとid～
classとid
  HTMLタグに名前を付ける方法として、HTMLコースでclassを学習しました。
  これと同様にidというものがあります。idはclassと同じように使いますが、
  classとの違いとして、1つのページ内で同じid名を複数回使うことはできません。
  idはclassと同様、下図のように指定します。

  参考画像：jquery01_image_12.jpg


classとidをセレクタにする
  classとidをセレクタにするには下図のようにします。CSSのセレクタと同様に
  class名の前にはドット（.）、id名の前にはシャープ（#）を用います。
  idは同一ページに一箇所しか存在しないので、jQueryの処理が高速化されます。
  jQueryオブジェクトのセレクタにはできるだけidを用いるようにしましょう。

  参考画像：jquery01_image_13.jpg


～要素を表示しよう～
displayプロパティ
  CSSにはdisplayプロパティというものがあります。「display: none;」とすると
  要素を隠すことができます（displayプロパティに関して、詳しくは
  HTML&CSS中級編を参照してください）。

  参考画像：jquery01_image_14.jpg


隠れた要素を表示しよう
  隠れた要素を表示するメソッドとして、showメソッドがあります。
  表示したい要素に対し、$('セレクタ').show();と指定することで
  隠れた要素を表示できます。
  hideメソッドと合わせてセットで覚えるとよいでしょう。

  参考画像：jquery01_image_15.jpg


アニメーション付きで要素を表示
  fadeOutの反対そしてfadeInメソッド、slideUpメソッドの反対として
  slideDownメソッドがあります。どちらもアニメーション付きで隠れた要素
  を表示することができます。

  参考画像：jquery01_image_16.jpg


～clickイベント～
イベントとは
  イベントを用いると、ある処理を行うタイミングを設定できます。
  WEBページ内で、ユーザーによってクリックなどの操作が行われた時、
  あらかじめイベント内に指定した処理を実行します。
  イベントの構文は、$('セレクタ').イベント名(function(){});
  のように書きます。

  参考画像：jquery01_image_17.jpg

clickイベント
  clickイベントを用いると、「セレクタがクリックされた時に処理をする」ことができます。
  例えば、ボタンをクリックしたときに関連する文章を表示する、
  といったイベントを設定できます。下図の例では、ボタンをクリックすると文章を隠す
  というイベントを作成しています。

  参考画像：jquery01_image_18.jpg
  参考画像：jquery01_image_19.jpg

～cssメソッド～
cssメソッドで色を変えよう
  cssメソッドの具体例を見てみましょう。cssメソッドで要素の文字の色を変更したいときは
  $('セレクタ').css('color','red');のように記述します。
  widthやfont-sizeなど他のプロパティもすべてcssメソッドで変更することができます。

  参考画像：jquery01_image_20.jpg


cssメソッドで要素を隠す、表示する
  cssメソッドでdisplayプロパティの値を変更することもできます。
  $('セレクタ').css('display','none');はhideメソッドと全く同じです。
  このようにhideメソッドやshowメソッドは、実はdisplayプロパティの値を
  変更しているだけだということを覚えておきましょう。

  参考画像：jquery01_image_21.jpg


～textメソッドとhtmlメソッド～
HTMLを変更する（１）-textメソッド
  jQueryではcssだけでなく、textメソッドを用いることでHTMLそのものを変更することも出来ます。
  textメソッドは、$('セレクタ').text('書き換える文字列');のように記述します。

  参考画像：jquery01_image_22.jpg


HTMLを変更する（２）-htmlメソッド
  htmlメソッドは、要素の中身のHTMLを書き換えることが出来ます。
  textメソッドと違い、htmlメソッドの引数は、単なる文字列ではなく
  HTMLだということです。例えば下図の例をtextメソッドで行うと、
  <span>タグもそのまま文字列してブラウザに表示されますが、
  htmlメソッドなら<span>タグがHTMLタグと認識され、
  ブラウザには「こんばんは」とだけ表示されます。

  参考画像：jquery01_image_23.jpg

演習問題で、以下のようにコーディングした。
その時に、気を付けるポイントあったため書き残す。
そのポイントは以下のコードである。

$('#text').html('<a href="https://prog-8.com/">ようこそ、Progateへ</a>');

htmlメソッドを使い、リンクを付けるとき<a>タグをシングルクォーテーションで囲む。
ダブルクォーテーションで囲むと認識されず、リンク先に飛ぶことが出来ない。

$(function() {
  // 「#change-text」要素に対するclickイベントを作成してください
  $('#change-text').click(function(){
    $('#text').text('ようこそ、Progateへ');
  });
  
  // 「#change-html」要素に対するclickイベントを作成してください
  $('#change-html').click(function(){
    $('#text').html('<a href="https://prog-8.com/">ようこそ、Progateへ</a>');
  });
  
});


～this～
thisの構文
  $(this)はイベントの中で、そのイベントが起こった要素を取得することができます。
  $()の中でthisをクォーテーション（"や'）で囲まないことに注意してください。
  $(this)は非常に重要な概念なので覚えておきましょう。

  参考画像：jquery01_image_24.jpg


thisの使い方
  thisはイメージしにくいので、具体例を見てみましょう。例えば下図のように、
  複数のli要素にclickイベントが設定されていた場合、クリックされたときに、
  実際にクリックされたli要素にだけ処理を行いたい場合があります。
  このようなときはthisを用いて、実際にイベントが起こった要素を取得しましょう。

  参考画像：jquery01_image_25.jpg


～変数とメソッドチェーン～
変数を使おう
  同じjQueryオブジェクトを複数回使用する時は変数にしましょう。コードが見やすくなる上、
  jQueryで変数宣言にはvarを用います。変数には文字列や数値、jQueryオブジェクトなどを
  格納することができますが、jQueryオブジェクトを格納する時は、わかりやすいように
  変数の頭に$を付けるのが慣例となっています。

  参考画像：jquery01_image_26.jpg


メソッドチェーンを使おう
  同じjQueryオブジェクトを複数回使用するときは、メソッドチェーンを使うことでも
  処理速度を高速化できます。メソッドチェーンとは１つのjQueryオブジェクトに
  連続してメソッドが利用できる構文です。$('セレクタ').メソッド().メソッド()...
  のように書くことで、それぞれのメソッドが適用されます。

  参考画像：jquery01_image_27.jpg


～find・children～
子要素を取得しよう(1) -findメソッド
  findメソッドは、すべての子孫要素（自分よりも下の階層の要素すべて）の中から、
  指定したセレクタを持つ要素を取得したいときに用います。下図の例では、
  <div id="wrapper">から</div>の中にあるすべての<a>要素を取得することができます。

  参考画像：jquery01_image_28.jpg


子要素を取得しよう(2) -children メソッド
  childrenメソッドは、指定したセレクタが持つ子要素（一階層だけ下）の中から
  指定したセレクタに合致した要素を取得したいときに用います。
  下の例では<div id = "wrapper">の子要素は<a>タグと<p>タグが1つずつなので、
  <a>タグが1つ取得されます。

  参考画像：jquery01_image_29.jpg


～hoverイベント～
hoverイベントを作ろう
  hoverイベントとは、要素にマウスが乗った時、外れた時に指定した処理を行うイベントです。
  下図のように「jQueryとは？」にマウスが乗ったときにだけ、説明文が表示されるようにしてみましょう。
  
  参考画像：jquery01_image_30.jpg
  参考画像：jquery01_image_31.jpg